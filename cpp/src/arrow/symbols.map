# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

{
  global:
    extern "C++" {
      # Export pthread_once-related symbols so that two SO files
      # (e.g. libarrow.so and libplasma.so) don't use separate copies of
      # those symbols.
      # See https://github.com/apache/arrow/pull/1953#issuecomment-386057063
      std::__once*;
    };

  # Symbols marked as 'local' are not exported by the DSO and thus may not
  # be used by client applications.
  local:
    # devtoolset / static-libstdc++ symbols
    __cxa_*;
    __once_proxy;

    # Static libraries that are linked in e.g. the manylinux1 build
    # Brotli compression library
    Brotli*;
    # zlib
    adler32*;
    crc32*;
    deflate*;
    inflate*;
    get_crc_table;
    zcalloc;
    zcfree;
    zError;
    zlibCompileFlags;
    zlibVersion;
    _tr_*;
    # bz2
    BZ2_*;
    # lz4
    LZ4_*;
    LZ4F_*;
    # zstandard
    ZSTD_*;
    ZSTDv*;
    HUF_*;
    HUFv*;
    FSE_*;
    FSEv*;
    ZBUFFv*;
    ERR_getErrorString;
    # jemalloc
    je_arrow_*;
    # ORC destructors
    _ZThn8_N3orc*;
    # Protobuf symbols that aren't hidden by the C++ section below
    # (destructors, vtables, other stuff)
    *N6google8protobuf*;

    extern "C++" {
      # devtoolset or -static-libstdc++ - the Red Hat devtoolset statically
      # links c++11 symbols into binaries so that the result may be executed on
      # a system with an older libstdc++ which doesn't include the necessary
      # c++11 symbols.
      std::*;

      # Statically linked C++ dependencies
      boost::*;
      double_conversion::*;
      google::*;
      # glog
      *MakeCheckOpValueString*;
      orc::*;
      snappy::*;
    };
};
